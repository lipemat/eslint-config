// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`index.js Original Config: original config 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "plugin:@wordpress/eslint-plugin/recommended-with-formatting",
    "plugin:import/typescript",
    "plugin:deprecation/recommended",
  ],
  "globals": {
    "$": "readonly",
    "jQuery": "readonly",
  },
  "overrides": [
    {
      "files": [
        "**/*.ts",
        "**/*.tsx",
      ],
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "unknown": "Use a specific type.",
            },
          },
        ],
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-redeclare": [
          "error",
        ],
        "@typescript-eslint/no-shadow": [
          "error",
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/strict-boolean-expressions": [
          "warn",
          {
            "allowNumber": false,
            "allowString": false,
          },
        ],
        "@typescript-eslint/type-annotation-spacing": [
          "warn",
          {
            "after": true,
            "before": false,
            "overrides": {
              "arrow": {
                "after": true,
                "before": true,
              },
            },
          },
        ],
        "jsdoc/no-undefined-types": "off",
        "no-magic-numbers": "off",
        "no-redeclare": "off",
        "no-shadow": "off",
        "no-undef": "off",
        "semi": "off",
      },
    },
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 7,
    "project": "./tsconfig.json",
    "sourceType": "module",
    "warnOnUnsupportedTypeScriptVersion": false,
  },
  "root": true,
  "rules": {
    "arrow-parens": [
      1,
      "as-needed",
    ],
    "arrow-spacing": [
      1,
      {
        "after": true,
        "before": true,
      },
    ],
    "camelcase": [
      2,
      {
        "properties": "never",
      },
    ],
    "import/no-unresolved": "off",
    "indent": [
      1,
      "tab",
      {
        "SwitchCase": 1,
      },
    ],
    "jsdoc/check-tag-names": [
      1,
      {
        "definedTags": [
          "notice",
          "link",
          "task",
          "ticket",
          "note",
        ],
      },
    ],
    "jsdoc/require-param": "off",
    "jsdoc/require-param-type": "off",
    "jsdoc/require-returns-description": "off",
    "lines-around-comment": "off",
    "no-console": [
      "warn",
      {
        "allow": [
          "warn",
          "error",
          "debug",
        ],
      },
    ],
    "no-constant-binary-expression": [
      "warn",
    ],
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 2,
      },
    ],
    "object-curly-spacing": [
      1,
      "never",
    ],
    "react-hooks/exhaustive-deps": "warn",
    "react-hooks/rules-of-hooks": "error",
    "react/display-name": "off",
    "react/jsx-curly-spacing": [
      1,
      {
        "allowMultiline": false,
        "children": true,
        "when": "never",
      },
    ],
    "react/no-unescaped-entities": [
      2,
      {
        "forbid": [
          ">",
          "}",
        ],
      },
    ],
    "react/prop-types": [
      2,
      {
        "skipUndeclared": true,
      },
    ],
    "space-before-blocks": [
      1,
      "always",
    ],
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "never",
        "asyncArrow": "ignore",
        "named": "never",
      },
    ],
    "space-in-parens": [
      2,
      "always",
    ],
    "template-curly-spacing": [
      1,
      "never",
    ],
    "yoda": [
      2,
      "always",
      {
        "onlyEquality": true,
      },
    ],
  },
  "settings": {
    "react": {
      "version": "18.0",
    },
  },
}
`;

exports[`index.js Snapshot 1`] = `
{
  "env": {
    "browser": true,
  },
  "extends": [
    "plugin:@wordpress/eslint-plugin/recommended-with-formatting",
    "plugin:import/typescript",
    "plugin:deprecation/recommended",
  ],
  "globals": {
    "$": "readonly",
    "jQuery": "readonly",
  },
  "overrides": [
    {
      "files": [
        "**/*.ts",
        "**/*.tsx",
      ],
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "unknown": "Use a specific type.",
            },
          },
        ],
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-redeclare": [
          "error",
        ],
        "@typescript-eslint/no-shadow": [
          "error",
        ],
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/strict-boolean-expressions": [
          "warn",
          {
            "allowNumber": false,
            "allowString": false,
          },
        ],
        "@typescript-eslint/type-annotation-spacing": [
          "warn",
          {
            "after": true,
            "before": false,
            "overrides": {
              "arrow": {
                "after": true,
                "before": true,
              },
            },
          },
        ],
        "jsdoc/no-undefined-types": "off",
        "no-magic-numbers": "off",
        "no-redeclare": "off",
        "no-shadow": "off",
        "no-undef": "off",
        "semi": "off",
      },
    },
    {
      "extends": [
        "plugin:svelte/recommended",
      ],
      "files": [
        "*.svelte",
      ],
      "parser": "svelte-eslint-parser",
      "parserOptions": {
        "parser": "@typescript-eslint/parser",
      },
      "rules": {
        "prefer-const": [
          0,
        ],
      },
    },
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 7,
    "extraFileExtensions": [
      ".svelte",
    ],
    "project": "./tsconfig.json",
    "sourceType": "module",
    "warnOnUnsupportedTypeScriptVersion": false,
  },
  "root": true,
  "rules": {
    "arrow-parens": [
      1,
      "as-needed",
    ],
    "arrow-spacing": [
      1,
      {
        "after": true,
        "before": true,
      },
    ],
    "camelcase": [
      2,
      {
        "properties": "never",
      },
    ],
    "import/no-unresolved": "off",
    "indent": [
      1,
      "tab",
      {
        "SwitchCase": 1,
      },
    ],
    "jsdoc/check-tag-names": [
      1,
      {
        "definedTags": [
          "notice",
          "link",
          "task",
          "ticket",
          "note",
        ],
      },
    ],
    "jsdoc/require-param": "off",
    "jsdoc/require-param-type": "off",
    "jsdoc/require-returns-description": "off",
    "lines-around-comment": "off",
    "no-console": [
      "warn",
      {
        "allow": [
          "warn",
          "error",
          "debug",
        ],
      },
    ],
    "no-constant-binary-expression": [
      "warn",
    ],
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 2,
      },
    ],
    "object-curly-spacing": [
      1,
      "never",
    ],
    "react-hooks/exhaustive-deps": "warn",
    "react-hooks/rules-of-hooks": "error",
    "react/display-name": "off",
    "react/jsx-curly-spacing": [
      1,
      {
        "allowMultiline": false,
        "children": true,
        "when": "never",
      },
    ],
    "react/no-unescaped-entities": [
      2,
      {
        "forbid": [
          ">",
          "}",
        ],
      },
    ],
    "react/prop-types": [
      2,
      {
        "skipUndeclared": true,
      },
    ],
    "space-before-blocks": [
      1,
      "always",
    ],
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "never",
        "asyncArrow": "ignore",
        "named": "never",
      },
    ],
    "space-in-parens": [
      2,
      "always",
    ],
    "template-curly-spacing": [
      1,
      "never",
    ],
    "yoda": [
      2,
      "always",
      {
        "onlyEquality": true,
      },
    ],
  },
  "settings": {
    "react": {
      "version": "18.0",
    },
  },
}
`;
